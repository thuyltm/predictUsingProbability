install.packages("classInt")
install.packages("BAMMtools")
library("BAMMtools")
data(whales, events.whales)
ed <- getEventData(whales, events.whales, burnin=0.25, nsamples=500)
ed <- dtRates(ed, tau=0.01)
vec <- ed$dtrates$rates[[1]]
library("BAMMtools")
data(whales, events.whales)
ed <- getEventData(whales, events.whales, burnin=0.25, nsamples=500)
ed <- dtRates(ed, tau=0.01)
vec <- ed$dtrates$rates[[1]]
getJenksBreaks(vec, 64)
vec
setwd("/home/thuy1/git/predictUsingProbability/Preprocess/")
mydata = read.csv("Freq_CC-AS_80.csv")
mydata
library("BAMMtools")
data(whales, events.whales)
whales
events.whales
ed <- getEventData(whales, events.whales, burnin=0.25, nsamples=500)
ed
library("classInt")
data(jenks71)
jenks71
jenks.tests()
pal1 <- c("wheat1", "red3")
pal1
?mfrow
??mrfrow
mfrow=c(2,3)
?par
opar <- par(mfrow=c(2,3))
opar
plot(classIntervals(jenks71$jenks71, n=5, style="fixed",
fixedBreaks=c(15.57, 25, 50, 75, 100, 155.30)), pal=pal1, main="Fixed")
jenks71$jenks71
?classIntervals
classIntervals(jenks71$jenks71, n=5, style="fixed",
fixedBreaks=c(15.57, 25, 50, 75, 100, 155.30)), pal=pal1, main="Fixed")
classIntervals(jenks71$jenks71, n=5, style="fixed",
fixedBreaks=c(15.57, 25, 50, 75, 100, 155.30))
classIntervals(jenks71$jenks71, n=5, style="sd",
fixedBreaks=c(15.57, 25, 50, 75, 100, 155.30))
classIntervals(jenks71$jenks71, n=5, style="sd")
jenks71$jenks71
mydata = read.csv("Freq_CC-AS_80.csv")
mydata
classIntervals(mydata, n=5, style="sd")
plot(classIntervals(jenks71$jenks71, n=5, style="fixed",
fixedBreaks=c(15.57, 25, 50, 75, 100, 155.30)), pal=pal1, main="Fixed")
opar <- par(mfrow=c(2,3))
plot(classIntervals(jenks71$jenks71, n=5, style="fixed",
fixedBreaks=c(15.57, 25, 50, 75, 100, 155.30)), pal=pal1, main="Fixed")
plot(classIntervals(jenks71$jenks71, n=5, style="sd"), pal=pal1, main="Pretty standard deviations")
plot(classIntervals(jenks71$jenks71, n=5, style="equal"), pal=pal1, main="Equal intervals")
plot(classIntervals(jenks71$jenks71, n=5, style="quantile"), pal=pal1, main="Quantile")
set.seed(1)
plot(classIntervals(jenks71$jenks71, n=5, style="kmeans"), pal=pal1, main="K-means")
plot(classIntervals(jenks71$jenks71, n=5, style="hclust", method="complete"),
pal=pal1, main="Complete cluster")
plot(classIntervals(jenks71$jenks71, n=5, style="hclust", method="single"),
pal=pal1, main="Single cluster")
set.seed(1)
plot(classIntervals(jenks71$jenks71, n=5, style="bclust", verbose=FALSE),
pal=pal1, main="Bagged cluster")
plot(classIntervals(jenks71$jenks71, n=5, style="fisher"), pal=pal1, main="Fisher's method")
?read.csv
mydata = read.csv("Freq_CC-AS_80.csv",sep = ",")
mydata
mydata = read.csv("Freq_CC-AS_80.csv",header = TRUE,sep = ",")
mydata = read.csv("Freq_CC-AS_80.csv",header = TRUE,sep = ",",quote = "\"'")
mydata = read.csv("Freq_CC-AS_80.csv",header = FALSE,
sep = ",",quote = "\"'")
mydata
classIntervals(mydata, n=5, style="sd")
mydata = read.csv("Freq_CC-AS_80.csv",header = FALSE,
sep = ",")[,1]
colnames(mydata) <- c("X1")
mydata
mydata$X1
mydata = read.csv("Freq_CC-AS_80.csv",header = FALSE,
sep = ",")[,1]
mydata
classIntervals(mydata, n=5, style="sd")
classIntervals(mydata, n=5, style="kmeans")
classIntervals(mydata, n=5, style="jenks")
classIntervals(mydata, n=5, style="jenks",cutlabels=TRUE)
classIntervals(mydata, n=3, style="jenks",cutlabels=TRUE)
getJenksBreaks(vec, 3)
getJenksBreaks(mydata, 3)
